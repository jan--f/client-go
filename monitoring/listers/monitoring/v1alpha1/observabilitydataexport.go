// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openshift/api/monitoring/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ObservabilityDataExportLister helps list ObservabilityDataExports.
// All objects returned here must be treated as read-only.
type ObservabilityDataExportLister interface {
	// List lists all ObservabilityDataExports in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ObservabilityDataExport, err error)
	// ObservabilityDataExports returns an object that can list and get ObservabilityDataExports.
	ObservabilityDataExports(namespace string) ObservabilityDataExportNamespaceLister
	ObservabilityDataExportListerExpansion
}

// observabilityDataExportLister implements the ObservabilityDataExportLister interface.
type observabilityDataExportLister struct {
	indexer cache.Indexer
}

// NewObservabilityDataExportLister returns a new ObservabilityDataExportLister.
func NewObservabilityDataExportLister(indexer cache.Indexer) ObservabilityDataExportLister {
	return &observabilityDataExportLister{indexer: indexer}
}

// List lists all ObservabilityDataExports in the indexer.
func (s *observabilityDataExportLister) List(selector labels.Selector) (ret []*v1alpha1.ObservabilityDataExport, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ObservabilityDataExport))
	})
	return ret, err
}

// ObservabilityDataExports returns an object that can list and get ObservabilityDataExports.
func (s *observabilityDataExportLister) ObservabilityDataExports(namespace string) ObservabilityDataExportNamespaceLister {
	return observabilityDataExportNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ObservabilityDataExportNamespaceLister helps list and get ObservabilityDataExports.
// All objects returned here must be treated as read-only.
type ObservabilityDataExportNamespaceLister interface {
	// List lists all ObservabilityDataExports in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ObservabilityDataExport, err error)
	// Get retrieves the ObservabilityDataExport from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ObservabilityDataExport, error)
	ObservabilityDataExportNamespaceListerExpansion
}

// observabilityDataExportNamespaceLister implements the ObservabilityDataExportNamespaceLister
// interface.
type observabilityDataExportNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ObservabilityDataExports in the indexer for a given namespace.
func (s observabilityDataExportNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ObservabilityDataExport, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ObservabilityDataExport))
	})
	return ret, err
}

// Get retrieves the ObservabilityDataExport from the indexer for a given namespace and name.
func (s observabilityDataExportNamespaceLister) Get(name string) (*v1alpha1.ObservabilityDataExport, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("observabilitydataexport"), name)
	}
	return obj.(*v1alpha1.ObservabilityDataExport), nil
}
