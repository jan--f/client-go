// Code generated by applyconfiguration-gen. DO NOT EDIT.

package applyconfigurations

import (
	v1 "github.com/openshift/api/monitoring/v1"
	v1alpha1 "github.com/openshift/api/monitoring/v1alpha1"
	monitoringv1 "github.com/openshift/client-go/monitoring/applyconfigurations/monitoring/v1"
	monitoringv1alpha1 "github.com/openshift/client-go/monitoring/applyconfigurations/monitoring/v1alpha1"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
)

// ForKind returns an apply configuration type for the given GroupVersionKind, or nil if no
// apply configuration type exists for the given GroupVersionKind.
func ForKind(kind schema.GroupVersionKind) interface{} {
	switch kind {
	// Group=monitoring.openshift.io, Version=v1
	case v1.SchemeGroupVersion.WithKind("AlertingRule"):
		return &monitoringv1.AlertingRuleApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("AlertingRuleSpec"):
		return &monitoringv1.AlertingRuleSpecApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("AlertingRuleStatus"):
		return &monitoringv1.AlertingRuleStatusApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("AlertRelabelConfig"):
		return &monitoringv1.AlertRelabelConfigApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("AlertRelabelConfigSpec"):
		return &monitoringv1.AlertRelabelConfigSpecApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("AlertRelabelConfigStatus"):
		return &monitoringv1.AlertRelabelConfigStatusApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("PrometheusRuleRef"):
		return &monitoringv1.PrometheusRuleRefApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("RelabelConfig"):
		return &monitoringv1.RelabelConfigApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("Rule"):
		return &monitoringv1.RuleApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("RuleGroup"):
		return &monitoringv1.RuleGroupApplyConfiguration{}

		// Group=monitoring.openshift.io, Version=v1alpha1
	case v1alpha1.SchemeGroupVersion.WithKind("AlertingRule"):
		return &monitoringv1alpha1.AlertingRuleApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("AlertingRuleSpec"):
		return &monitoringv1alpha1.AlertingRuleSpecApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("AlertingRuleStatus"):
		return &monitoringv1alpha1.AlertingRuleStatusApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("AlertRelabelConfig"):
		return &monitoringv1alpha1.AlertRelabelConfigApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("AlertRelabelConfigSpec"):
		return &monitoringv1alpha1.AlertRelabelConfigSpecApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("AlertRelabelConfigStatus"):
		return &monitoringv1alpha1.AlertRelabelConfigStatusApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("DataSink"):
		return &monitoringv1alpha1.DataSinkApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("DataSource"):
		return &monitoringv1alpha1.DataSourceApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("DataTransformation"):
		return &monitoringv1alpha1.DataTransformationApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("ObservabilityDataExport"):
		return &monitoringv1alpha1.ObservabilityDataExportApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("ObservabilityDataExportSpec"):
		return &monitoringv1alpha1.ObservabilityDataExportSpecApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("ObservabilityDataExportStatus"):
		return &monitoringv1alpha1.ObservabilityDataExportStatusApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("PrometheusFederateSpec"):
		return &monitoringv1alpha1.PrometheusFederateSpecApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("PrometheusRemoteWriteSpec"):
		return &monitoringv1alpha1.PrometheusRemoteWriteSpecApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("PrometheusRuleRef"):
		return &monitoringv1alpha1.PrometheusRuleRefApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("RelabelConfig"):
		return &monitoringv1alpha1.RelabelConfigApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("Rule"):
		return &monitoringv1alpha1.RuleApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("RuleGroup"):
		return &monitoringv1alpha1.RuleGroupApplyConfiguration{}

	}
	return nil
}
